name: Code Lint

on:
  push:
    branches: [ main ] # 针对 main 分支的 push
  pull_request:
    branches: [ main ] # 针对 main 分支的 Pull Request

jobs:
  lint:
    runs-on: ubuntu-latest # 在最新的 Ubuntu 运行器上运行

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # 检出代码

      - name: Set up Python
        uses: actions/setup-python@v5 # 设置 Python 环境
        with:
          python-version: '3.13.9' # 根据你的项目需要选择合适的 Python 版本

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # 安装你需要的代码检查工具，例如 flake8, black, isort
          pip install flake8 black isort

      - name: Run Black (Check code formatting)
        # Black 的 --check 和 --diff 选项用于检查文件是否符合格式化规范，并显示差异，但不实际修改文件。
        run: black . --check --diff
        # 注意:
        # 如果你希望 Black 自动格式化代码并提交更改，你需要使用类似 stefanzweifel/git-auto-commit-action 的 Action，
        # 但通常在 Lint 工作流中只做检查，不在 PR 上自动提交格式化更改。

      - name: Run isort (Check import sorting)
        # isort 的 --check-only 选项用于检查导入是否已正确排序，但不实际修改文件。
        run: isort . --check-only --diff

      - name: Run Flake8 (Static code analysis)
        # Flake8 用于检查代码的风格和潜在的错误
        run: |
          # 你可以根据项目的具体需求添加或修改 Flake8 的配置，例如最大行长等。
          # 检查所有 Python 文件
          flake8 .
